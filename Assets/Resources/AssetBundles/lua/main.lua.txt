-- local request = CS.System.Net.HttpWebRequest.Create(CS.System.Uri('http://127.0.0.1:8200'))
-- request.Timeout = 1000
-- print('fdsajfs', CS.HttpUtil.Instance.Post)

-- CS.HttpUtil.Instance:PostAsync(
--     request,
--     assert(pb.encode('http.rpc', data)),
--     function(result)
--         -- local rpc = assert(pb.decode('http.rpc',result.bytes))
--         -- print(rpc.router,rpc[rpc.router].info.code);
--     end
-- )

require('global')

if (GAME_CONST.PRO_ENV == ENV_TYPE.DEV) then -- 此处为断点代码，需要注意的是，当改为正式环境时会失效，需要手动调整
    -- 连接EmmyLua
    try {
        function()
            local dbg = require('emmy_core')
            dbg.tcpConnect('localhost', 9966)
        end,
        catch = function(error)
            log.warn('EmmyLua未连接，若不需要IDE断点则忽略')
        end
    }
end

-- GAME_CONST.TEST_CONSOLE_COMP:Show()

-- local data = {router = 'register', register = {username = 'fdsajhfaskfl', password = 'sdafasdgasdf'}}
-- -- 序列化
-- local buff = assert(pb.encode('http.rpc', data))
-- log.print('序列化成功', buff, pb.tohex(buff))
-- -- 反序列化
-- local rpc = assert(pb.decode('http.rpc', buff))
-- log.print('反序列化成功', rpc)

-- log.print(200, '我是一个提示', {tip = '我是一个提示'})
-- log.error(400, '我是一个错误', {tip = '我是一个错误'})
-- log.warn(500, '我是一个警告', {tip = '我是一个警告'})

-- scene:load('Step')

-- Middleware:new():use(function(ctx,next)
--     ui:load("ui_msg",nil,function(ccc)
--         -- ccc:closeSelf()
--         next()
--     end)
-- end):use(function(ctx,next)
--     ui:load("ui_msg",nil,function(ccc)
--         -- ccc:closeSelf()
--         next()
--     end)
-- end):use(function(ctx,next)
--     ui:load("ui_msg",nil,function(ccc)
--         -- ccc:closeSelf()
--         next()
--     end)
-- end):next()

-- ui:load("ui_msg",nil,function(ccc)
--     -- ccc:closeSelf()
-- end)

broadcast:on(
    BROADCAST_CODE.ERROR,
    function(error, data, rpcRouter, rpcData)
        log.error(error:get_id(), error:getTip(data), rpcRouter, rpcData)
    end
)

local router = 'login'
local data = {username = 'aaaa34123', password = 'bbbvvvvv'}
http:send(router, data)
