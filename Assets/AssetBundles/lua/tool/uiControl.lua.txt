local UIControl = class("UIControl")
---------------- base ----------------
---@type string
UIControl.getter.name = function(this)
    return this.node.name
end
---@type Transform
UIControl.getter.transform = function(this)
    return this.node
end
---@type GameObject
UIControl.getter.gameObject = function(this)
    if(self.gameObject==nil) then
        self.gameObject = this.node.gameObject
    end
    return self.gameObject
end
---@type RectTransform
UIControl.getter.rectTransform = function(this)
    return this:getComponent(CS.UnityEngine.RectTransform,'rectTransform')
end
---------------- graphic ----------------
---@type Graphic
UIControl.getter.graphic = function(this)
    return this:getComponent(CS.UnityEngine.UI.Graphic,"graphic")
end
UIControl.getter.image = function (this)
    return this.graphic
end
UIControl.getter.rawImage = function (this)
    return this.graphic
end
UIControl.getter.text = function(this)
    return this.graphic
end
---------------- selectable ----------------
---@type Selectable
UIControl.getter.selectable = function(this)
    return this:getComponent(CS.UnityEngine.UI.Selectable,"selectable")
end
---@type Button
UIControl.getter.button = function(this)
    return this.selectable
end
---@type Dropdown
UIControl.getter.dropdown = function(this)
    return this.selectable
end
---@type InputField
UIControl.getter.inputField = function(this)
    return this.selectable
end
---@type Scrollbar
UIControl.getter.scrollbar = function(this)
    return this.selectable
end
---@type Slider
UIControl.getter.slider = function(this)
    return this.selectable
end
---@type Toggle
UIControl.getter.toggle = function(this)
    return this.selectable
end

-- 构造函数
function UIControl:ctor(node,path)
    path = path or ''
    self.node = node:Find(path)
    self.root = node
    self.path = path

    self.unityEventInfo = {}
end
-- 卸载事件
function UIControl:close()
    for unityEvent, infos in pairs(self.unityEventInfo) do
        for index, info in ipairs(infos) do
            unityEvent:RemoveListener(info.event)
        end
    end
end

-- 获得Component
---@param t CS.Type Component Type
---@param name string 可为空 对应缓存属性名，获取成功将自动存储至self中
function UIControl:getComponent(t,name)
    local c = rawget(self,name)
    if(c~=nil) then return c end
    c = comp:getCSComponent(self.node,t)
    if(c==nil) then return nil end
    if(name~=nil) then
        self[name] = c
    end
    return c
end
-- 获得Component 不存在则添加
---@param t CS.Type Component Type
---@param name string 可为空 对应缓存属性名，获取成功将自动存储至self中
function UIControl:getOrAddComponent(t,name)
    local c = rawget(self,name)
    if(c~=nil) then return c end
    c = comp:getCSComponent(self.node,t)
    if(c==nil) then
        c = comp:addCSComponent(self.node,t)
    end
    if(name~=nil) then
        self[name] = c
    end
    return c
end

-- 添加UnityEvent监听
---@param unityEvent UnityEvent
---@param callback Action
function UIControl:addUnityEventListener(unityEvent,this,callback)
    local event = function()
        Common.call(this,callback)
    end
    unityEvent:AddListener(event)

    if(not self.unityEventInfo[unityEvent]) then
        self.unityEventInfo[unityEvent] = {}
    end
    table.insert(self.unityEventInfo[unityEvent],{callback=callback,event=event})

    return true
end
-- 移除UnityEvent监听
---@param unityEvent UnityEvent
---@param callback Action
function UIControl:removeUnityEventListener(unityEvent,callback)
    if(not self.unityEventInfo[unityEvent]) then return false end
    for index, info in ipairs(self.unityEventInfo[unityEvent]) do
        if(info.callback==callback) then
            unityEvent:RemoveListener(info.event)

            table.remove(self.unityEventInfo[unityEvent],index)
            return true
        end
    end
    return false
end
---------------- graphic ----------------
--- Image
function UIControl:SetSprite(sprite)
    self.image.sprite = sprite
end
function UIControl:SetFillAmount(value)
    self.image.fillAmount = value
end
--- RawImage
function UIControl:SetTexture(texture)
    self.rawImage.texture = texture
end
--- Text
function UIControl:SetText(text)
    self.text.text = text
end
function UIControl:GetText(text)
    return self.text.text
end
---------------- selectable ----------------
--- Button
function UIControl:SetOnClick(this, callback)
    self:addUnityEventListener(self.button.onClick,this,callback)
end
--- Dropdown
function UIControl:GetDropdownValue()
    return self.dropdown.value
end

function UIControl:SetDropdownValue(valueIndex)
    self.dropdown.value = valueIndex
end


return UIControl